@page "/"
@using GUI_Generator_UseCase1_Display.Widgets
@using Models.Metadata
@using Models.UseCases.DisplayOnly.UseCase1
@using Radzen.Blazor
@using System.Reflection
@if (content != null)
{
    @content    
}

@code {
    private RenderFragment? content;

    private Dictionary<string, Type> constraintAttributeMap;

    protected override void OnInitialized()
    {
        constraintAttributeMap = new Dictionary<string, Type>()
        {
            {"readonly", typeof(Type)}
        };

        string specification = string.Empty;
        var auiEmitter = new AUIEmitter();

        var data = new SensorData();
        specification = auiEmitter.Emit(data, specification);

        var cuiEmitter = new CUIEmitter(data);

        var tupleCollection = cuiEmitter.Emit(specification);
    }
}
