@using GeneratorSharedComponents.Abstractions
@using Models.Metadata
@using System.Collections
@using System.Linq

@inherits WidgetBase
@attribute [ReadOnly]
@attribute [ValueKind(typeof(Array))]

@if (Value != null)
{
	foreach (var item in Value)
	{
		foreach (var property in item.GetType().GetProperties())
		{
			headers.Add(property.Name);
		}

		break;
	}

	foreach (var item in Value)
	{
		foreach (var property in item.GetType().GetProperties())
		{
			values.Add(property.GetValue(item)!.ToString()!);
		}
	}

	<table class="table table-hover">
		<thead>
			<tr>
				@foreach (var item in headers)
				{
					<th>@item</th>
				}
			</tr>
		</thead>
		<tbody>
			@foreach (var item in Value)
			{
				<tr>
					foreach (var property in item.GetType().GetProperties())
					{
						<td>@property.GetValue(item)</td>
					}
				</tr>
			}
		</tbody>
	</table>
}

@code {
	private List<string> headers = new List<string>();

	private List<string> values = new List<string>();

	[Parameter]
	public IEnumerable? Value { get; set; }
}
