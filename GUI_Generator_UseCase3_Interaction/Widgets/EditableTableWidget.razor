@using GeneratorSharedComponents.Abstractions
@using Models.Metadata
@using System.Collections
@using System.Linq

@inherits WidgetBase
@attribute [Editable]
@attribute [ValueKind(typeof(Array))]

@if (Value != null)
{
    foreach (var item in Value)
    {
        foreach (var property in item.GetType().GetProperties())
        {
            headers.Add(property.Name);
        }

        break;
    }

    foreach (var item in Value)
    {
        foreach (var property in item.GetType().GetProperties())
        {
            values.Add(property.GetValue(item)!.ToString()!);
        }
    }

    var elementsPerColumn = headers.Count + 1;

    <table class="table table-hover">
        <thead>
            <tr>
                @foreach (var item in headers)
                {
                    <th>@item</th>
                }

                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < values.Count; i+=elementsPerColumn - 1)
            {
                var currentMax = i + elementsPerColumn;

                for (int j = i; j < currentMax; j++)
                {
                    <tr>
                        @if ((i + 1) % elementsPerColumn == 0)
                        {
                            <td><RadzenButton Text="Delete"></RadzenButton></td>
                        }
                        else
                        {
                            <td>@values[i]</td>
                        }
                    </tr>
                }
            }
        </tbody>
    </table>
}

@code {
    private List<string> headers = new List<string>();

    private List<string> values = new List<string>();

    [Parameter]
    public IEnumerable? Value { get; set; }
}
