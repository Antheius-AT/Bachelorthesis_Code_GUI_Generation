@using Models
@using Models.UseCases.DisplayOnly.UseCase1

@if (Data != null)
{
    <h1>SENSOR DASHBOARD</h1>

    <div class="top-row mt-5">
           <div class="col-12 col-lg-4">
            <div class="col-12">
                <RadzenLabel Text="Is Sensor active"></RadzenLabel>
            </div>
            <div class="col-12">
                <RadzenSwitch Disabled=true Value=Data.IsPoweredOn>
                </RadzenSwitch>
            </div>
            <div class="col-12">
                <RadzenLabel Text="@(Data.IsPoweredOn ? "YES" : "NO")"></RadzenLabel>
            </div>
        </div>
    </div>

    @if (Data.IsPoweredOn)
    {
       <div class="row mt-5">
        <div class="col-12 col-lg-6">
            <div class="col-12">
                <RadzenLabel Text="Avg. temperature last week"></RadzenLabel>
            </div>
            <div class="col-12">
                <RadzenArcGauge>
                    <RadzenArcGaugeScale Min=-10 Max=50 Radius=1>
                        <RadzenArcGaugeScaleValue Value=Data.AverageTempAcrossWeek>
                            <Template Context="pointer">
                                <h1>@Data.AverageTempAcrossWeek</h1>
                            </Template>
                        </RadzenArcGaugeScaleValue>
                    </RadzenArcGaugeScale>
                </RadzenArcGauge>
            </div>
        </div>
        <div class="col-12 col-lg-6">
            <div class="col-12">
                <RadzenLabel Text="Avg. power consumption last week"></RadzenLabel>
            </div>
            <div class="col-12">
                <RadzenArcGauge>
                    <RadzenArcGaugeScale Min=0 Max=500 Radius=1>
                        <RadzenArcGaugeScaleValue Value=Data.AveragePowerConsumptionAcrossWeek>
                            <Template Context="pointer">
                                <h1>@Data.AveragePowerConsumptionAcrossWeek</h1>
                            </Template>
                        </RadzenArcGaugeScaleValue>
                    </RadzenArcGaugeScale>
                </RadzenArcGauge>
            </div>
        </div>
    </div>
    <div class="row mt-5">
         <div class="col-12 col-lg-6">
            <div class="col-12">
                <RadzenLabel Text="Current air humidity"></RadzenLabel>
            </div>
            <div class="col-12">
                <RadzenArcGauge>
                    <RadzenArcGaugeScale Min=0 Max=100 Radius=1>
                        <RadzenArcGaugeScaleValue Value=Data.CurrentAirHumidity>
                            <Template Context="pointer">
                                <h1>@Data.CurrentAirHumidity</h1>
                            </Template>
                        </RadzenArcGaugeScaleValue>
                    </RadzenArcGaugeScale>
                </RadzenArcGauge>
            </div>
        </div>

         <div class="col-12 col-lg-6">
            <div class="col-12">
                <RadzenLabel Text="Current temperature"></RadzenLabel>
            </div>
            <div class="col-12">
                <RadzenArcGauge>
                    <RadzenArcGaugeScale Min=-10 Max=50 Radius=1>
                        <RadzenArcGaugeScaleValue Value=Data.CurrentTemperature>
                            <Template Context="pointer">
                                <h1>@Data.CurrentTemperature</h1>
                            </Template>
                        </RadzenArcGaugeScaleValue>
                    </RadzenArcGaugeScale>
                </RadzenArcGauge>
            </div>
        </div>
    </div>   
    }
}

@code {
    [Parameter]
    public SensorData? Data { get; set; }

    [Parameter]
    public PerformanceMonitor? Monitor { get; set; }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            Monitor.Stop();
        }
    }

    protected override void OnInitialized()
    {
        Data!.StateHasChanged += (_, _) => this.StateHasChanged();
    }
}
